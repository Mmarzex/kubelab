#cloud-config

## Fedora Atomic kickstart for Ansible Kubernetes deployment

write_files:
  - path: "/usr/local/bin/post-install.sh"
    permissions: "0750"
    content: |
      #!/bin/bash
      # Post-Install tasks to do only on the first reboot
      # This script will self destruct in 3,2,...

      # Enable the newly installed docker service:
      systemctl enable --now docker
      sleep 2
      
      # Self Destruct!
      echo "Post Installation tasks Complete."
      systemctl disable post-install
      rm /etc/systemd/system/post-install.service
      rm /usr/local/bin/post-install.sh

  - path: "/usr/local/bin/kubelab-ssh-keygen.sh"
    permissions: "0750"
    content: |
      #!/bin/bash
      # Setup new kubelab ansible ssh keys
      ssh-keygen -N '' -f /root/.ssh/kubelab
      cat /root/.ssh/kubelab.pub >> /root/.ssh/authorized_keys
      echo "Kubelab Ansible SSH pubkey:"
      tail -1 /root/.ssh/authorized_keys
      
  - path: "/usr/local/bin/kubelab-setup.sh"
    permissions: "0750"
    content: |
      #!/bin/bash
      KUBELAB_GIT="https://github.com/EnigmaCurry/kubelab.git"
      HELM_CHARTS_GIT="https://github.com/EnigmaCurry/charts.git"
      HELM_INSTALL_URL="https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get"
      SEALED_SECRETS_VERSION="v0.7.0"
      SEALED_SECRETS_URL="https://github.com/bitnami-labs/sealed-secrets/releases/download/$SEALED_SECRETS_VERSION/kubeseal-linux-amd64"

      # Setup kubelab and new ansible ssh keys
      if [ -d "/var/lib/kubelab/inventory/kubelab" ]; then
          echo "kubelab alredy setup in /var/lib/kubelab/inventory/kubelab"
          exit 1
      fi
      if [[ ! -v DROPLET_IPS ]]; then
          echo "DROPLET_IPS not set"
          exit 1
      fi

      # Install helm
      curl -L $HELM_INSTALL_URL | bash

      # Install kubeseal
      curl -L $SEALED_SECRETS_URL > /tmp/kubeseal
      install -m 755 /tmp/kubeseal /usr/local/bin/kubeseal

      # Setup ansible + kubelab
      git clone $KUBELAB_GIT /var/lib/kubelab
      git clone $HELM_CHARTS_GIT /var/lib/charts
      cd /var/lib/kubelab
      docker inspect --type=image kubelab > /dev/null
      IMAGE_EXISTS=$?
      [ $IMAGE_EXISTS -ne 0 ] && docker build -t kubelab .
      cp -a inventory/sample inventory/kubelab
      docker run --rm -t -v /var/lib/kubelab/inventory:/kubespray/inventory \
                 -e CONFIG_FILE=inventory/kubelab/hosts.ini \
                 kubelab \
                 python3 contrib/inventory_builder/inventory.py $DROPLET_IPS

      # Configure ssh client to connect to any cluster node
      rm -f /root/.ssh/config
      IFS=' ' read -a nodes <<< "${DROPLET_IPS}"
      for n in ${!nodes[@]}; do
      cat <<EOF >> /root/.ssh/config
      Host node$((n+1))
          Hostname ${nodes[$n]}
          User root
          IdentityFile /root/.ssh/kubelab
      EOF
      done
      echo "woot."

  - path: "/usr/local/bin/kubelab-playbook.sh"
    permissions: "0750"
    content: |
      #!/bin/bash
      docker run --rm -t -v /var/lib/kubelab:/kubespray \
             -v /root/.ssh/kubelab:/root/.ssh/id_rsa \
             kubelab \
             ansible-playbook -i inventory/kubelab/hosts.ini $1

  - path: "/usr/local/bin/kubelab-deploy.sh"
    permissions: "0750"
    content: |
      #!/bin/bash
      ## Deploy kubespray cluster and kubelab:
      /usr/local/bin/kubelab-playbook.sh cluster.yml && \
      /usr/local/bin/kubelab-playbook.sh kubelab.yml && \
      mkdir -p /root/.kube && \
      scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -r node1:.kube/config /root/.kube/config

  - path: "/etc/docker/daemon.json"
    content: |
      {
        "storage-driver": "overlay2"
      }
      
  - path: "/etc/systemd/system/post-install.service"
    content: |
      [Service]
      Type=oneshot
      ExecStart=/usr/local/bin/post-install.sh
      [Install]
      WantedBy=multi-user.target

  - path: "/etc/yum.repos.d/docker.repo"
    content: |
      [docker-ce-stable]
      name=Docker CE Stable - $basearch
      baseurl=https://download.docker.com/linux/fedora/$releasever/$basearch/stable
      enabled=1
      gpgcheck=1
      gpgkey=https://download.docker.com/linux/fedora/gpg

  - path: "/etc/yum.repos.d/kubernetes.repo"
    content: |
      [kubernetes]
      name=Kubernetes
      baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
      enabled=1
      gpgcheck=1
      repo_gpgcheck=1
      gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

runcmd:
  - ln -s /etc/systemd/system/post-install.service /etc/systemd/system/multi-user.target.wants/post-install.service
  # Upgrade Docker
  - rpm-ostree override remove docker docker-common cockpit-docker
  # Install initial dependencies:
  - atomic host install git docker-ce kubectl go emacs-nox vim nano
  # Reboot using the new os-tree:
  - systemctl reboot
  # post-install systemd service now finalizes setup on the first reboot. 
